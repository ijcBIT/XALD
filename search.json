[
  {
    "objectID": "aging.html",
    "href": "aging.html",
    "title": "age signature",
    "section": "",
    "text": "options(digits=2)\ndtable&lt;-function(data){\n  DT::datatable(\n        { data},\n        filter = 'top',\n        # selection = list(mode = 'multiple', selected = c(1:10), target = 'column', selectable = c(-2, -3)),\n        fillContainer = F,\n        # style =  \"bootstrap\",\n\n        extensions = 'Buttons',\n\n        options = list(\n          paging = TRUE,\n          searching = TRUE,\n          fixedColumns = TRUE,\n          autoWidth = FALSE,\n          scrollX=TRUE,\n          digits=4,\n          ordering = TRUE,\n          dom = 'Bfrtip',\n          buttons = list(\n            list(\n              extend = \"collection\",\n              text = 'download entire dataset',\n              action = DT::JS(\"function ( e, dt, node, config ) {\n                                                    Shiny.setInputValue('test', true, {priority: 'event'});\n                                                    }\")\n            ),\n            'copy',\n            'csv',\n            'excel'\n          ),\n\n          class = \"display\",\n          server=TRUE\n        ),\n      ) |&gt; DT::formatRound(which(sapply(data,is.double)),4)\n}\nmyModal &lt;- function() {\n\n  div(id = \"test\",\n      shiny::modalDialog(downloadButton(\"download1\",\"Download data as csv\"),\n                         br(),\n                         br(),\n                         downloadButton(\"download2\",\"Download data as excel\"),\n                         easyClose = TRUE, title = \"Download Table\")\n  )\n}\n\nrenderDT&lt;- function(data){\n  output$dtable &lt;- DT::renderDataTable({\n    dtable(data)\n  })\n\n    shiny::observeEvent(input$test, {\n      print(\"hello\")\n      showModal(myModal())\n    })\n    output$download1 &lt;- shiny::downloadHandler(\n      filename = function() {\n        paste(\"data-\", Sys.Date(), \".csv\", sep=\"\")\n      },\n      content = function(file) {\n        write.csv(data, file)\n      }\n    )\n\n    output$download2 &lt;- shiny::downloadHandler(\n      filename = function() {\n        paste(\"data-\", Sys.Date(), \".xlsx\", sep=\"\")\n      },\n      content = function(file) {\n        writexl::write_xlsx(data, file)\n      })\n}"
  },
  {
    "objectID": "aging.html#pbmc-cell-aging-signature",
    "href": "aging.html#pbmc-cell-aging-signature",
    "title": "age signature",
    "section": "1.1 PBMC cell aging signature:",
    "text": "1.1 PBMC cell aging signature:\nTo answer question 1.B we are going to take as a reference the work made by Wilma, T. et al @Steegenga2014\nIn their paper they present 3 datasets: 1. cgSet_Exprs: The set of probes that come from observed changes in methylation AND in expression (398 genes) 2. cgSet_NO: The set of probes that come from observed changes in methylation BUT NOT expression (2390 genes) 3. cgSet_pre: The set of probes reported to be age-related on previous literature.\nAnd we created a new one combining 2 &3: 4. cgSetm: The combination/union of cgSet_Exprs & cgSet_NO\nSo let’s prepare our data replicating their workflow:\n\n1.1.1 DNA methylation & gene expression:\n450k array where pre-processed and cleaned and the old subjects where compared to the young subjects.\n20,917 were significantly regulated (Lima t test, p &lt; 0.01) between the group of old and young subjects. Over 5 % methylation difference between the mean of the group of the young and old subjects was found for 10,625. 7,598 gene-related and 3,027 intergenic probes. From the 7,598 gene-related 640 probes where further discarded because of pseudo- and uncharacterized genes, antisense RNAs, long intergenic nonprotein coding RNAs and micro-RNAs.\nFinally a clean set of 6958 probes where selected and the most significant differentially expressed genes were identified using −2 &gt; t value &gt; 2 as a cut-off. Fig 2A\n\n398 genes where selected as the most significant differentially expressed genes and 170 of those have at least 2 associated DMPs.\n\nreadxl::read_xls(\"data/11357_2014_9648_MOESM2_ESM.xls\",sheet = 2,skip = 2)-&gt;sup2\n\nNew names:\n• `C-30` -&gt; `C-30...7`\n• `C-31` -&gt; `C-31...8`\n• `C-34` -&gt; `C-34...9`\n• `C-35` -&gt; `C-35...10`\n• `C-43` -&gt; `C-43...11`\n• `C-52` -&gt; `C-52...12`\n• `C-62` -&gt; `C-62...13`\n• `C-64` -&gt; `C-64...14`\n• `C-65` -&gt; `C-65...15`\n• `C-66` -&gt; `C-66...16`\n• `C-30` -&gt; `C-30...19`\n• `C-31` -&gt; `C-31...20`\n• `C-34` -&gt; `C-34...21`\n• `C-35` -&gt; `C-35...22`\n• `C-43` -&gt; `C-43...23`\n• `C-52` -&gt; `C-52...24`\n• `C-62` -&gt; `C-62...25`\n• `C-64` -&gt; `C-64...26`\n• `C-65` -&gt; `C-65...27`\n• `C-66` -&gt; `C-66...28`\n• `MAPINFO` -&gt; `MAPINFO...46`\n• `MAPINFO` -&gt; `MAPINFO...58`\n\nDT::datatable(sup2)"
  },
  {
    "objectID": "aging.html#inhouse-data",
    "href": "aging.html#inhouse-data",
    "title": "age signature",
    "section": "1.2 Inhouse data:",
    "text": "1.2 Inhouse data:\n\n1.2.1 Load:\nLoaded data has been filtered out for single nucleotide polymorphism (SNP) at or near the target CpG with minor allele frequency equal or larger than 1 % and probes that contained more than 2 SNPs.\n\nlibrary(data.table)\nlibrary(targets)\nlibrary(SummarizedExperiment)\nlibrary(S4Vectors)\nss &lt;- readRDS(\"data/SS.rds\")\nss_ctl &lt;- ss[Type==\"Control\",]\n\nrgSet &lt;- cnv.methyl::read.metharray.exp.par(targets=ss_ctl,ncores = 36,folder = \"analysis/intermediate/\")\nrgSet &lt;- minfi::read.metharray.exp(targets = ss_ctl)\n\nmset &lt;- name_rgset(rgSet,ss_ctl,exclude=\"206702460034_R05C01\",newname=\"Sample_Name\")\n\ncontrols&lt;-filter(                                         # 1.- Filters: -probes: pval&lt;0.01 \n    targets=ss_ctl, rgSet=mset,sampGroups=\"Sample_Group\", #              -samples: 10% probes fail\n    qc_folder = \"analysis/\")\nss_ctl &lt;- data.table::data.table(as.data.frame(controls@colData))\n\n\n\nLoading required package: S4Vectors\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\n\n\n1.2.2 QC plots:\n\nsource(\"../meth_functions.R\")\nidcol=\"Sample_Name\"\nctl_qc_dir=\"analysis/aging/ctl/\"\ndir.create(ctl_qc_dir,recursive = T, showWarnings = F)\ncontrols_qc &lt;- \nqc(                                                       # Makes qc plots:qcReport, density, beanplot, mean_qc \n    controls,sampGroups = \"Sample_Group\",sampNames=idcol,idcol=idcol, qc_folder = ctl_qc_dir\n    )\n\nLoading required package: Biostrings\n\n\nLoading required package: IRanges\n\n\nLoading required package: XVector\n\n\nLoading required package: GenomeInfoDb\n\n\n\nAttaching package: 'Biostrings'\n\n\nThe following object is masked from 'package:base':\n\n    strsplit\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nLoading required package: minfi\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'matrixStats'\n\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nThe following object is masked from 'package:Biobase':\n\n    rowMedians\n\n\nLoading required package: bumphunter\n\n\nLoading required package: foreach\n\n\nLoading required package: iterators\n\n\nLoading required package: parallel\n\n\nLoading required package: locfit\n\n\nlocfit 1.5-9.7   2023-01-02\n\n\nSetting options('download.file.method.GEOquery'='auto')\n\n\nSetting options('GEOquery.inmemory.gpl'=FALSE)\n\n\n\nAttaching package: 'minfi'\n\n\nThe following object is masked _by_ '.GlobalEnv':\n\n    read.metharray\n\n\nLoading required package: IlluminaHumanMethylationEPICmanifest\n\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by\nthe caller; using TRUE\n\n\n\n\n\n\nbeanplot\n\n\nThere are 1051028 probes that pass QC and 23 control samples in our dataset.\n\ntable(ss_ctl$Condition)\n\n\n      AMN      cALD      cAMN CTL.adult CTL.child \n        0         0         0        11        12 \n\n\n\n\n1.2.3 Normalization:\nFollowing the aforementioned paper @Steegenga2014 we now normalize the data using the subset-quantile within array normalization (SWAN) method:\n\nlibrary(minfi)\nnorm&lt;-minfi::preprocessSWAN(controls)\n\n\n#Report"
  },
  {
    "objectID": "aging.html#sec-controls",
    "href": "aging.html#sec-controls",
    "title": "age signature",
    "section": "1.3 1.A: Methylation differences between young & adult:",
    "text": "1.3 1.A: Methylation differences between young & adult:\nTo test the effect of age on our controls we will split our samples into adult +18 and young &lt;18 subjects. Then we will fit a model to compare the methylation levels of this 2 groups.\n\nsource(\"../meth_functions.R\")\nmvals&lt;-getM(norm) \nfull_mod&lt;-mod(object = mvals, group_var = \"Condition\",\n                        singular=F,pairwise = T,\n                        metadata = ss_ctl,\n                        idcol=\"Sample_Name\")\n\n[1] \"CTL.child-CTL.adult\"\n\nsaveRDS(full_mod,\"data/full_mod.rds\")"
  },
  {
    "objectID": "aging.html#section",
    "href": "aging.html#section",
    "title": "age signature",
    "section": "1.4 ",
    "text": "1.4 \n\nsig_mod&lt;-full_mod[abs(full_mod$t)&gt;2 & full_mod$p.value &lt; 0.01 ,]\n\nsaveRDS(sig_mod,\"data/sig_mod.rds\")\n\n139887 were significantly regulated (Lima t test, p &lt; 0.01) between the group of adult and child subjects using −2 &gt; t value &gt; 2 as a cut-off.\n\nlibrary(cnv.methyl)\n\n\nAttaching package: 'cnv.methyl'\n\n\nThe following objects are masked _by_ '.GlobalEnv':\n\n    DMPextr, qc\n\nlibrary(minfi)\ndmps &lt;- cnv.methyl::DMPextr(fit = sig_mod,                         # Toptable & stats\n                                            ContrastsDM = colnames(full_mod$contrasts),\n                                            beta_normalized = minfi::getBeta(controls),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(controls),\n                                            writeOut = F)\n\nLoading required package: IlluminaHumanMethylationEPICanno.ilm10b4.hg19\n\n\nWarning in .local(x, row.names, optional, ...): Arguments in '...' ignored\n\nsaveRDS(dmps,\"data/dmps.rds\")\n\nFrom here we could extract our own group of DMPs comparing the two age groups from the contrasts.\n\ndmps&lt;-data.table::as.data.table(dmps[nchar(dmps$UCSC_RefGene_Name&gt;1),])\ndmps&lt;-dmps[,UCSC_RefGene_Name:=sapply(UCSC_RefGene_Name,function(x) paste(unique(unlist(strsplit(x,\";\"))),collapse = \";\"))]\nNROW(dmps)\n\n[1] 55505\n\n\nSo yes, there are actually 55505 DMPs.\n\nplotDMP(data.table::as.data.table(dmps))\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\nNow we already checked that there are methylation differences in our data by separating controls into young and old. Since our samples are only controls and the only controlled difference between them is age, this suggests that the observed methylation differences are related to that factor. Nevertheless, there could be other underlying variables affecting the methylation levels between the 2 conditions that we ignore.\nSo far, we followed the proceeding from the paper in our analysis in order to mimic their workflow so the results are comparable. Nevertheless, they also measured expression values, which they used to correlate with methylation levels in order to filter the gene candidates for their age-related profile. In our case, there is no expression, so we can’t construct a dataset of candidate genes taking into account gene expression. Eventhough, we can use the same datasets from their previous work on our data in order to see if the set with expression and without expression behave in a different way."
  },
  {
    "objectID": "aging.html#b-intersection-with-reference-datasets",
    "href": "aging.html#b-intersection-with-reference-datasets",
    "title": "age signature",
    "section": "1.5 1.B: Intersection with reference datasets:",
    "text": "1.5 1.B: Intersection with reference datasets:\nAs mentioned previously, another way to find out if there is a change in methylation associated with aging in our data is looking at those sites that have been previously reported to show this association. We will use the PBMC reference datasets (with/without expression change) plus the one from previous literature that is also mentioned in the paper from @Steegenga2014:\n\n1.5.1 Load data:\n\nlibrary(readxl)\npaper_betas &lt;- readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 2S\", skip = 2)\n\nNew names:\n• `C-30` -&gt; `C-30...7`\n• `C-31` -&gt; `C-31...8`\n• `C-34` -&gt; `C-34...9`\n• `C-35` -&gt; `C-35...10`\n• `C-43` -&gt; `C-43...11`\n• `C-52` -&gt; `C-52...12`\n• `C-62` -&gt; `C-62...13`\n• `C-64` -&gt; `C-64...14`\n• `C-65` -&gt; `C-65...15`\n• `C-66` -&gt; `C-66...16`\n• `C-30` -&gt; `C-30...19`\n• `C-31` -&gt; `C-31...20`\n• `C-34` -&gt; `C-34...21`\n• `C-35` -&gt; `C-35...22`\n• `C-43` -&gt; `C-43...23`\n• `C-52` -&gt; `C-52...24`\n• `C-62` -&gt; `C-62...25`\n• `C-64` -&gt; `C-64...26`\n• `C-65` -&gt; `C-65...27`\n• `C-66` -&gt; `C-66...28`\n• `MAPINFO` -&gt; `MAPINFO...46`\n• `MAPINFO` -&gt; `MAPINFO...58`\n\npaper_betas2 &lt;- readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 3S\", skip = 2)\n\nNew names:\n• `C-30` -&gt; `C-30...7`\n• `C-31` -&gt; `C-31...8`\n• `C-34` -&gt; `C-34...9`\n• `C-35` -&gt; `C-35...10`\n• `C-43` -&gt; `C-43...11`\n• `C-52` -&gt; `C-52...12`\n• `C-62` -&gt; `C-62...13`\n• `C-64` -&gt; `C-64...14`\n• `C-65` -&gt; `C-65...15`\n• `C-66` -&gt; `C-66...16`\n• `C-30` -&gt; `C-30...19`\n• `C-31` -&gt; `C-31...20`\n• `C-34` -&gt; `C-34...21`\n• `C-35` -&gt; `C-35...22`\n• `C-43` -&gt; `C-43...23`\n• `C-52` -&gt; `C-52...24`\n• `C-62` -&gt; `C-62...25`\n• `C-64` -&gt; `C-64...26`\n• `C-65` -&gt; `C-65...27`\n• `C-66` -&gt; `C-66...28`\n• `MAPINFO` -&gt; `MAPINFO...46`\n• `MAPINFO` -&gt; `MAPINFO...58`\n\npaper_betas3 &lt;- readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 4S\", skip = 6)\n\nNew names:\n• `p value` -&gt; `p value...3`\n• `p value` -&gt; `p value...6`\n\n\n\n\n1.5.2 Reference probelists #sec-probelist\nThere are 4 reference probelists:\n\ncgSet_Exprs: The set of probes that come from observed changes in methylation BUT NOT in expression (398 genes)\ncgSet_NO: The set of probes that come from observed changes in methylation AND expression (2390 genes)\ncgSetm: The combination/union of cgSet_Exprs & cgSet_NO\ncgSet_pre: The set of probes reported to be age-related on previous literature.\n\n\nprobelist &lt;- list(\n  cgSet_Exprs = paper_betas$ProbeID,\n  cgSet_NO = paper_betas2$ProbeID,\n  cgSetm = unique(c(paper_betas$ProbeID,paper_betas2$ProbeID)),\n  cgSet_pre = paper_betas3$`Probe nr`\n\n)\nsaveRDS(probelist,\"data/probelist.rds\")\n\n\n\n1.5.3 reference vs inhouse:\nWe have 2 models, the full model, which has all the probes from the normalised data in it full_mod and the same model which has been filtered according to the same criteria as in the paper sig_mod (0.01 pval & +-2t) to keep only sites with a significant change in methylation.\nSo, as we saw in 1A we get a set of +50K DMPs, following the steps described in the paper to construct a new reference dataset from our data (excluding the part where data is crossed with expression).\nWe believe those sites are related to age because the model was built comparing old vs young healthy subjects, but there might be other factors affecting the differences in methylation, there are 2 solutions we propose:\n\nsig_mod: We could either intersect our significant probes nrow(sig_mod) with the sites that have been previously reported to be related with age.\nfull_mod: Test the whole reference datasets on our data.\n\nsig_mod may offer better results, since it is based on the differences present in our own data, but fopr the same reason it could also introduce bias.\nLet’s take a look at the sample size of each of the age_profile datasets. (4 references x 2 models = 8 datasets):\n\ndataset: The name of the reference dataset used\nN_Age_ref: Total size of the reference dataset\nN_tested: The subset of probes from each reference dataset that we tested (are present in our chip and have not been discarded in QC steps)\nN_DMPs: Number of probes that are significantlly methylated between the 2 groups that are also present in each of the age reference subset.\nobserved: Number of DMPs with percentajes relative to reference datasets.\nexpected: Expected percentage of DMPs (N_DMPs/N_total)\n\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\n\nThe following object is masked from 'package:SummarizedExperiment':\n\n    shift\n\n\nThe following object is masked from 'package:GenomicRanges':\n\n    shift\n\n\nThe following object is masked from 'package:IRanges':\n\n    shift\n\n\nThe following objects are masked from 'package:S4Vectors':\n\n    first, second\n\ntab &lt;- t(sapply(probelist,function(x) table(rownames(full_mod) %in% x)))\ntab2 &lt;- t(sapply(probelist,function(x) table(rownames(sig_mod) %in% x)))\ndtab&lt;-data.table::data.table(\n  dataset = c(rownames(tab)),\n  N_Age_ref = sapply(probelist,NROW),\n  N_tested = paste0(tab[,2], \" (\",round(tab[,2]/sapply(probelist,NROW)*100,2), \"%)\"),\n  N_DMPs = tab2[,2]\n  \n)\n\ndtab[,observed:=paste0(N_DMPs, \"/\", tab[,2], \" (\",round((N_DMPs/tab[,2])*100,2), \"%)\"  )]\ndtab[, expected:= round( NROW(sig_mod$coefficients)/NROW(full_mod$coefficients) *100,2)]\ndtab\n\n       dataset N_Age_ref      N_tested N_DMPs           observed expected\n1: cgSet_Exprs       726  649 (89.39%)    224   224/649 (34.51%)       16\n2:    cgSet_NO      4554 4083 (89.66%)   1559 1559/4083 (38.18%)       16\n3:      cgSetm      5073 4693 (92.51%)   1769 1769/4693 (37.69%)       16\n4:   cgSet_pre      7477 7024 (93.94%)   3862 3862/7024 (54.98%)       16\n\n\nOur significant dataset still captures more than 30% of the probes for each reference dataset, while the overall percentage of probes that show differences in methylation between young and adults is 16.14%. After data preprocessing around 90% of the cgs for each reference set is present in our data, which we consider is a fair representation. On average, 16.14% of the cg sites in our data are DMPs. While 34-55% of the probes from the age-related reference sets are DMPs. Thus, the percentage of DMPs is higher than the mean of DMPs in our data. This suggests that on our particular model fitted on age there is some enrichment for this age-related probes, which makes sense. Nevertheless, although the model has been trained using controls and using age as the independent variable, some of the methylation changes between the two groups can respond to uncontrolled variables that we ignore. Since the reference datasets have been previously related to age, they can be used to filter the significant sites from our model into a consensus reference set for our particular PMBC model. More about inhouse reference datasets Section 1.6 .\n\n\n1.5.4 Betas:\n\nsapply(names(probelist), function(n){\n    data.frame(\n      sig=length(intersect(probelist[[n]],rownames(sig_mod))),\n      full=length(intersect(probelist[[n]],rownames(full_mod)))\n    )\n      })\n\n     cgSet_Exprs cgSet_NO cgSetm cgSet_pre\nsig  224         1559     1769   3862     \nfull 649         4083     4693   7024     \n\n\nWe can now construct each of the 8 datasets with mean beta values for young/adult groups:\n\nbetas &lt;- minfi::getBeta(controls)\n\n# Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\ndesign_FULL &lt;- t(full_mod$design)\n# For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\nbetas_c_FULL &lt;-apply(design_FULL , 1 , function(x) apply(betas[,ss_ctl$Sample_Name] %*% diag(x),1 , function(y) mean(y[y!=0])))\n\nbetas_c &lt;- lapply(list(full_mod,sig_mod),function(fit){\n  # Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\n  design &lt;- t(fit$design)\n  \n  dt_c&lt;-rbindlist(lapply(names(probelist), function(n){\n    idx&lt;-intersect(probelist[[n]],rownames(fit))\n    cgs&lt;-intersect(idx,rownames(betas))\n    b &lt;- betas[cgs,]\n    # For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\n    dt=as.data.table(apply(design , 1 , function(x) apply(b %*% diag(x),1 , function(y) mean(y[y!=0]))))\n    dt$ref=n\n    dt$cg=cgs\n    dt\n    } \n  ))\n  dt_c\n})\nnames(betas_c)&lt;- c(\"full_mod\",\"sig_mod\")\npdata&lt;-rbindlist(betas_c,idcol = \"model\")\nnames(pdata)[2:3]&lt;-c(\"adult\",\"child\")\npdata[,diff:=adult-child]\npdata&lt;-pdata[!is.na(diff),]\npdata[,type:=ifelse(diff&gt;0,\"hyper\",\"hypo\")]\np_long&lt;-melt(pdata, measure.vars=c(\"adult\",\"child\") )\np_long[,color:=ifelse(type  == \"hyper\",\"red\",\"green\")]\n\nWe are ready to test mean differences and plot:\n\n\n1.5.5 Significance:\nWe want to know if the differences in methylation between young and adults are significant for each of the reference sets. To do that, we test for differences in the group means.\nMethylation data is bimodal, since the effects of methylation can either occur by hyper or hypomethylation. This means the data is going to show a bimmodal distribution. Thus, a wilcoxon non-parametric test is used to compare the means .\n\nt &lt;- pdata[,wilcox.test(child,adult)$p.value,by=c(\"ref\",\"model\")]\nt\n\n\n?(caption)\n\n\n\n           ref    model      V1\n1: cgSet_Exprs full_mod 4.0e-03\n2:    cgSet_NO full_mod 1.8e-21\n3:      cgSetm full_mod 5.9e-23\n4:   cgSet_pre full_mod 2.8e-24\n5: cgSet_Exprs  sig_mod 2.1e-06\n6:    cgSet_NO  sig_mod 1.8e-46\n7:      cgSetm  sig_mod 1.2e-50\n8:   cgSet_pre  sig_mod 7.4e-33\n\n\n\n\nAlso a bimodal distribution could be transformed in 2 normal distributions for hyper and hypo.\n\npdata[,sd.child:=sd(child),by=type]\npdata[,sd.adult:=sd(adult),by=type]\nz_bimodal &lt;- pdata[,c(N=.N,BSDA::z.test(child,adult,sigma.x=unique(sd.child),sigma.y=unique(sd.adult))),by=c(\"model\",\"ref\",\"type\")]\n# t_bimodal &lt;- pdata[,t.test(child,adult),by=c(\"ref\",\"model\",\"type\")]\nz_bimodal[,group:=rep(c(\"child\",\"adult\"),.N/2)]\nzt&lt;- dcast(z_bimodal, ref + model + type + N + p.value ~ group, value.var = c(\"estimate\"))\nzt[,diff:=adult-child]\ndata.table::setorder(zt,p.value,diff)\nkableExtra::kbl(zt)|&gt;kableExtra::kable_classic_2()\n\n\n\nTable 1.1: Young vs Adult Controls methylation distributions significance test.\n\n\nref\nmodel\ntype\nN\np.value\nadult\nchild\ndiff\n\n\n\n\ncgSet_pre\nfull_mod\nhypo\n5194\n0.00\n0.43\n0.49\n-0.06\n\n\ncgSet_pre\nsig_mod\nhypo\n2971\n0.00\n0.43\n0.51\n-0.08\n\n\ncgSetm\nfull_mod\nhyper\n3290\n0.00\n0.22\n0.18\n0.04\n\n\ncgSet_NO\nfull_mod\nhyper\n2897\n0.00\n0.22\n0.18\n0.04\n\n\ncgSetm\nsig_mod\nhyper\n1475\n0.00\n0.19\n0.13\n0.05\n\n\ncgSet_NO\nsig_mod\nhyper\n1311\n0.00\n0.19\n0.13\n0.06\n\n\ncgSet_pre\nsig_mod\nhyper\n890\n0.00\n0.31\n0.25\n0.07\n\n\ncgSet_pre\nfull_mod\nhyper\n1824\n0.00\n0.32\n0.28\n0.04\n\n\ncgSetm\nfull_mod\nhypo\n1400\n0.00\n0.49\n0.53\n-0.04\n\n\ncgSet_NO\nfull_mod\nhypo\n1184\n0.00\n0.49\n0.53\n-0.04\n\n\ncgSetm\nsig_mod\nhypo\n292\n0.00\n0.47\n0.53\n-0.07\n\n\ncgSet_NO\nsig_mod\nhypo\n246\n0.00\n0.47\n0.54\n-0.07\n\n\ncgSet_Exprs\nfull_mod\nhyper\n418\n0.00\n0.23\n0.19\n0.04\n\n\ncgSet_Exprs\nsig_mod\nhyper\n176\n0.00\n0.18\n0.13\n0.05\n\n\ncgSet_Exprs\nfull_mod\nhypo\n230\n0.04\n0.47\n0.50\n-0.03\n\n\ncgSet_Exprs\nsig_mod\nhypo\n48\n0.06\n0.46\n0.52\n-0.07\n\n\n\n\n\n\n\n# kableExtra::kbl(z_bimodal[,.SD,.SDcols=c(\"ref\",\"model\",\"type\",\"estimate\",\"conf.int\",\"p.value\")],digits=2) |&gt; kableExtra::kable_classic()\n\nIn this second statistical test, instead of comparing the distribution of the two groups we are splitting the data into hyper and hypomethylation, so it adds a new layer of information. The data in the table is sorted by p.value, so it shows the most significant first, but there is the estimate mean difference too.\nThe results show that there are significant differences.\nDataset means are all significantlly diferent (either with wilcoxon or student t test). For cgSet_pre from the literature there is a decrease in methylation with age. There is an increase in methylation for the cgSet_NO dataset (without expression) and less differences for those sites correlated with expression changes.\n\n\n1.5.6 Plots:\n\nlibrary(ggplot2)\nlibrary(viridis)\n\nWarning: package 'viridis' was built under R version 4.3.0\n\n\nLoading required package: viridisLite\n\n  p1&lt;-ggplot(p_long, aes(x=variable, y=value, fill= variable)) +\n     geom_boxplot(aes(fill=variable),outlier.fill=\"ivory\",alpha = 0.5) +\n      # scale_fill_manual(ys=levels(col_subclass)) +\n      geom_jitter(color=p_long$color,\n                  size=0.1,show.legend = TRUE,\n                  alpha=0.2) +\n\n      #theme_ipsum() +\n      theme(\n        legend.position=\"left\",\n        plot.title = element_text(size=11)\n      ) +\n      ggtitle(\"Beta ys between young and old\") +\n      xlab(\"Cells\")+\n    ylab(\"relative fraction\")+\n            scale_x_discrete(guide = guide_axis(angle = 60))+\n    \n    facet_wrap(as.formula(paste(\"~ ref + model\" )),ncol = 4)\n  \n   \np2&lt;-ggplot(p_long[ref!=\"cgSetm\",], aes(x=variable, y=value, fill= variable)) +\n     geom_boxplot(aes(fill=variable),outlier.fill=\"ivory\",alpha = 0.5) +\n      # scale_fill_manual(ys=levels(col_subclass)) +\n      # geom_jitter(#color=pdata$color,\n      #             size=0.1,show.legend = TRUE,\n      #             alpha=0.2) +\n\n      #theme_ipsum() +\n      theme(\n        legend.position=\"left\",\n        plot.title = element_text(size=11)\n      ) +\n      ggtitle(\"Beta ys between young and old\") +\n      xlab(\"Cells\")+\n    ylab(\"relative fraction\")+\n            scale_x_discrete(guide = guide_axis(angle = 60))+\n    \n    facet_wrap(as.formula(paste(\"~ ref + model\" )),ncol = 2)\np2"
  },
  {
    "objectID": "aging.html#sec-inhouseref",
    "href": "aging.html#sec-inhouseref",
    "title": "age signature",
    "section": "1.6 Inhouse reference datasets",
    "text": "1.6 Inhouse reference datasets\nSince we suspect that our disease is related to accelarated aging but we don’t really know if one reference data is going to be better than the other we will create 3 different reference datasets:\nWe will also inspect which pathways are realted to each of these sets.\n\npathways_refsets&lt;-list()\n\nTo do that we will need to add gene names to our data.frame. In this case we will use the convinient annotation provided by illumina plataform for their EPIC methylation arrays.\n\nlibrary(data.table)\nlibrary(IlluminaHumanMethylationEPICanno.ilm10b2.hg19)\n\n\nAttaching package: 'IlluminaHumanMethylationEPICanno.ilm10b2.hg19'\n\n\nThe following objects are masked from 'package:IlluminaHumanMethylationEPICanno.ilm10b4.hg19':\n\n    Islands.UCSC, Locations, Manifest, Other, SNPs.132CommonSingle,\n    SNPs.135CommonSingle, SNPs.137CommonSingle, SNPs.138CommonSingle,\n    SNPs.141CommonSingle, SNPs.142CommonSingle, SNPs.144CommonSingle,\n    SNPs.146CommonSingle, SNPs.147CommonSingle, SNPs.Illumina\n\n# 1. Get gene names from EPIC annotation object\nEPIC_anno&lt;-data.table::as.data.table(as.data.frame(IlluminaHumanMethylationEPICanno.ilm10b2.hg19::Other),keep.rownames = \"cg\")\ndata.table::setkey(EPIC_anno,cg)\n\n# 2. Filter for significant probes and absolute mean difference of beta values &gt; 0.05 \ndt_path&lt;-p_long[model==\"sig_mod\"&abs(diff)&gt;0.05,.SD,.SDcols=c(\"ref\",\"cg\",\"type\",\"diff\")]\n\n# 3. add gene name information to our data.table\ndata.table::setkey(dt_path,cg)\ndt_path$gene_name &lt;- EPIC_anno[dt_path$cg,UCSC_RefGene_Name]\n\n\nhead(dt_path)\n\n         ref         cg type   diff gene_name\n1: cgSet_pre cg00004105 hypo -0.073     LOXL4\n2: cgSet_pre cg00004105 hypo -0.073     LOXL4\n3:  cgSet_NO cg00004667 hypo -0.058    ZBTB17\n4:    cgSetm cg00004667 hypo -0.058    ZBTB17\n5:  cgSet_NO cg00004667 hypo -0.058    ZBTB17\n6:    cgSetm cg00004667 hypo -0.058    ZBTB17\n\n\n\n1.6.1 cgIn_consensus:\nThe consensus set by merging all reference sets and selecting significant probes in our model.\n\nprobelist$cgIn_consensus &lt;- unique(dt_path$cg)#intersect(row.names(sig_mod), unique(unlist(probelist)))\n\nNow we will look at the associated pathways to that reference set:\n\nsource(\"R/functions.R\")\n# Crete a list to store pathways results:\ncgIn_consensus&lt;-list()\n\n# Subset annotation to the corresponding probeset:\nanno&lt;-dt_path[probelist$cgIn_consensus,]\n\n# Get hypomethylated genes list: \ngenes.hypo &lt;- unique(unlist(sapply(\n  anno[type==\"hypo\",gene_name]\n  ,function(x)unlist(strsplit(x,\";\")))))\n\n# Get pathways associated with the previous set:\npathways.hypo &lt;- gprofiler2::gost(signif = T ,genes.hypo)\n\n# Clean results:\ndth&lt;- data.table::as.data.table(pathways.hypo[[1]])\ndth[,FDR:=p_value]\ndth[,Contrast:=\"controls\"]\ndth[,TERM:=term_name]\ndth[,source:=factor(source)]\n\npathway&lt;-path_results(dth,group=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\n\n# Store results \ncgIn_consensus$hypo &lt;- pathway\n\n# Repeat for hypermethylated genes: \n\ngenes.hyper &lt;- unique(unlist(sapply(\n  anno[type==\"hyper\",gene_name]\n  ,function(x)unlist(strsplit(x,\";\")))))\npathways.hyper &lt;- gprofiler2::gost(signif = T ,genes.hyper)\n\n# Store results \ndth&lt;- data.table::as.data.table(pathways.hyper[[1]])\ndth[,FDR:=p_value]\ndth[,Contrast:=\"controls\"]\ndth[,TERM:=term_name]\ndth[,source:=factor(source)]\npathway&lt;-path_results(dth,group=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\ncgIn_consensus$hyper&lt;-pathway\npathways_refsets[[\"cgIn_consensus\"]]&lt;-cgIn_consensus\n\n\n1.6.1.1 Hyper pathways:\n\ndtable(pathways_refsets$cgIn_consensus$hyper)\n\n\n\n\n\n\n\n\n1.6.1.2 Hypo pathways:\n\ndtable(pathways_refsets$cgIn_consensus$hypo)\n\n\n\n\n\n\n\n\n\n1.6.2 cgIn_top:\nSelect the top significant probes in our model. We will use limma’s topTable function to get the top 5000 most significant probes.\n\nprobelist$cgIn_top &lt;- rownames(limma::topTable(sig_mod,number=5000))\n\nFor convinience the chunk of code above has been converted to a function:\n\npathways_refsets[[\"cgIn_top\"]]&lt;-get_pathway(probeIDs = probelist$cgIn_top,dt=dt_path)\n\n\n1.6.2.1 Hyper pathways:\n\ndtable(pathways_refsets$cgIn_top$hyper)\n\n\n\n\n\n\n\n\n1.6.2.2 Hypo pathways:\n\ndtable(pathways_refsets$cgIn_top$hypo)\n\n\n\n\n\n\n\n\n\n1.6.3 cgIn_literature:\nFrom all the reference datasets in the paper, cgSet_pre contains more DMPs in our data than any other.\n\nprobelist$cgIn_literature &lt;- dt_path[ref==\"cgSet_pre\",cg]\n\n\npathways_refsets[[\"cgIn_literature\"]]&lt;-get_pathway(probelist$cgIn_literature,dt=dt_path)\n\n\n1.6.3.1 Hyper pathways:\n\ndtable(pathways_refsets$cgIn_literature$hyper)\n\n\n\n\n\n\n\n\n1.6.3.2 Hypo pathways:\n\ndtable(pathways_refsets$cgIn_literature$hypo)\n\n\n\n\n\n\n\n\n\n1.6.4 cgIn_NO:\nAlthough it has less %DMPs than When we perform the t-test the dataset from PBMC cell line without changes in expression has a lower p-value.\n\nprobelist$cgIn_NO &lt;- dt_path[ref==\"cgSet_NO\",cg]\n\n\npathways_refsets[[\"cgIn_NO\"]]&lt;-get_pathway(probelist$cgIn_NO,dt=dt_path)\n\n\n1.6.4.1 Hyper pathways:\n\ndtable(pathways_refsets$cgIn_NO$hyper)\n\n\n\n\n\n\n\n\n1.6.4.2 Hypo pathways:\n\ndtable(pathways_refsets$cgIn_NO$hypo)"
  },
  {
    "objectID": "aging.html#amn_adults",
    "href": "aging.html#amn_adults",
    "title": "age signature",
    "section": "2.1 AMN_Adults:",
    "text": "2.1 AMN_Adults:\nSince we only have childs with the cerebral condition, and we believe that the disease could behave differently in childs and adults, we will first only focus in adults with AMN, cAMN (AMN + cerebral) and controls.\n\nlibrary(targets)\nlibrary(data.table)\nss_adults &lt;- readRDS(\"data/ss_Adults.rds\")\n\nrgSet &lt;- cnv.methyl::read.metharray.exp.par(targets=ss_adults,ncores = 36,folder = \"analysis/intermediate/\")\n\nReading multiple idat-files in parallel. Using 36 cores.\n\nrgSet &lt;- minfi::read.metharray.exp(targets = ss_adults)\n\nmset &lt;- name_rgset(rgSet,ss_adults,exclude=\"206702460034_R05C01\",newname=\"Sample_Name\")\n\nadults&lt;-filter(                                         # 1.- Filters: -probes: pval&lt;0.01 \n    targets=ss_adults, rgSet=mset,sampGroups=\"Sample_Group\", #              -samples: 10% probes fail\n    qc_folder = \"analysis/\")\n\nWarning in dir.create(qc_folder): 'analysis' already exists\n\n\nWarning in filter(targets = ss_adults, rgSet = mset, sampGroups = \"Sample_Group\", : The following samples will be discarded since they fail to pass the p-value filter ( 10% of the probes with p-val &gt;0.01): \n lnf-21.5\n\n\nWarning in filter(targets = ss_adults, rgSet = mset, sampGroups = \"Sample_Group\", : The following probes will be discarded since more than10% of the samples have detection p-values &gt; 0.01): \n lnf-21.5\n\nss_adults &lt;- data.table::data.table(as.data.frame(adults@colData))\n\ndim(adults)\n\n[1] 1051070      71\n\n\nThere are 1051070 probes that pass QC and 71 control samples in our dataset.\n\ntable(ss_adults$Type)\n\n\nControl Disease \n     11      60 \n\n\nAlso, we can distinguish between controls and the two types of disease AMN and cerebral.\n\ntable(droplevels.factor(ss_adults$Condition))\n\n\n      AMN      cAMN CTL.adult \n       52         8        11 \n\n\nThus, we have 2 possible different comparisons. Either we group togehter all the patients or we distinguish 2 phenotypes.\n\n2.1.1 Normalization:\nFollowing the aforementioned paper by Wilma, T. et al we now normalize the data using the subset-quantile within array normalization (SWAN) method:\n\nlibrary(minfi)\nnorm&lt;-minfi::preprocessSWAN(adults)\nclean &lt;- prep(norm, remove_sex=F, arraytype=\"EPIC\")\n\nWarning in .getSex(CN = CN, xIndex = xIndex, yIndex = yIndex, cutoff = cutoff):\nAn inconsistency was encountered while determining sex. One possibility is that\nonly one sex is present. We recommend further checks, for example with the\nplotSex function.\n\n\n\n\n2.1.2 Methylation differences:\nSince we are interested in age related differences caused by the disease we must remove normal methylation changes due to age. Then remaining differences in methylation in previously selected age-related probes can be attributed to the disease phenotypes. There are 2 ways of removing the effects of age.\n\nWe can remove the effect of Age from the data by regressing on Age and using the residuals to fit a second model. Then we can use the disease group as the predictor variable to see if any group is showing more methylation than the controls for the age-specific sites.\nAnother option is to add Age as a covariate in the model.\n\n\n2.1.2.1 Model1: correct for age and use residuals:\n\nsource(\"../meth_functions.R\")\nmvals&lt;-getM(clean) \ndesign &lt;- model.matrix(~Age,data = ss_adults)\nage_fit &lt;- limma::lmFit(mvals, design=design )\nres &lt;- residuals(age_fit, mvals)\n\nNow we perform a linear model comparing disease and control group:\n\nres_mod_ext &lt;- mod(object = res, group_var = \"Condition\",\n                        singular=F,pairwise = T,\n                        metadata = ss_adults,\n                        idcol=\"Sample_Name\")\n\n[1] \"AMN-CTL.adult\"  \"AMN-cAMN\"       \"CTL.adult-cAMN\"\n\nres_mod &lt;- mod(object = res, group_var = \"Type\",\n                        singular=F,pairwise = T,\n                        metadata = ss_adults,\n                        idcol=\"Sample_Name\")\n\n[1] \"Disease-Control\"\n\n\n\nsig_res_mod&lt;-res_mod[abs(res_mod$t)&gt;2 & res_mod$p.value &lt; 0.01 ,]\n# Have to check the filters for each of the 3 contrasts by sepparate for example applying lapply on contrast. Will make one dmp for each of the contrasts.\n# sig_res_mod_ext&lt;-res_mod_ext[abs(res_mod_ext$t)&gt;2 & res_mod_ext$p.value &lt; 0.01 ,]\n\n14634 were significantly regulated (Lima t test, p &lt; 0.01) between the group of adult and child subjects using −2 &gt; t value &gt; 2 as a cut-off.\n\nlibrary(cnv.methyl)\nlibrary(minfi)\ndmps &lt;- cnv.methyl::DMPextr(fit = sig_res_mod,                         # Toptable & stats\n                                            ContrastsDM = colnames(sig_res_mod$contrasts),\n                                            beta_normalized = minfi::getBeta(adults),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(adults),\n                                            writeOut = F)\n\nWarning in .local(x, row.names, optional, ...): Arguments in '...' ignored\n\ndmps$Type &lt;- ifelse(dmps$diff_meanMeth &gt; 0,\"Hyper\",\"Hypo\")\ndmps&lt;-as.data.table(dmps, keep.rownames=T)\nsaveRDS(dmps,\"data/dmps_adults.rds\")\ndmps_ext &lt;- cnv.methyl::DMPextr(fit = res_mod_ext,                         # Toptable & stats\n                                            ContrastsDM = colnames(res_mod_ext$contrasts),\n                                            beta_normalized = minfi::getBeta(adults),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(adults),\n                                            writeOut = F)\n\nWarning in .local(x, row.names, optional, ...): Arguments in '...' ignored\n\ndmps_ext$Type &lt;- ifelse(dmps_ext$diff_meanMeth &gt; 0,\"Hyper\",\"Hypo\")\ndmps_ext&lt;- as.data.table(dmps_ext[abs(dmps_ext$t)&gt;2 & dmps_ext$P.Value &lt; 0.01,],keep.rownames = T)\nsaveRDS(dmps_ext,\"data/dmps_adults_ext.rds\")\n\nThe 2 dmp sets can be merged together into a single data.frame:\n\nlibrary(data.table)\nDMPs &lt;- rbind(dmps, dmps_ext)\n\nDMPs&lt;-DMPs[,UCSC_RefGene_Name:=sapply(UCSC_RefGene_Name,function(x) paste(unique(unlist(strsplit(x,\";\"))),collapse = \";\"))]\nNROW(DMPs)\n\n[1] 4467\n\ntable(DMPs$Contrast)\n\n\n       AMN-cAMN   AMN-CTL.adult  CTL.adult-cAMN Disease-Control \n           2110               6             589            1762 \n\n\nSo there are 1762 DMPs.\n\nplotDMP(data.table::as.data.table(DMPs))\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n2.1.2.2 Model2: Add age as a covariate:\n\nsource(\"../meth_functions.R\")\nmvals&lt;-getM(clean) \n\nmod2_ext &lt;- mod(object = mvals, group_var = \"Condition\",\n                        singular=F,pairwise = T,\n                        metadata = ss_adults,\n                        idcol=\"Sample_Name\")\n\n[1] \"AMN-CTL.adult\"  \"AMN-cAMN\"       \"CTL.adult-cAMN\"\n\nmod2 &lt;- mod(object = res, group_var = \"Type\",\n                        singular=F,pairwise = T,\n                        metadata = ss_adults,\n                        idcol=\"Sample_Name\")\n\n[1] \"Disease-Control\"\n\n\n\nsig_mod2&lt;-mod2[abs(mod2$t)&gt;2 & mod2$p.value &lt; 0.01 ,]\n# Have to check the filters for each of the 3 contrasts by sepparate for example applying lapply on contrast. Will make one dmp for each of the contrasts.\n# sig_mod2_ext&lt;-mod2_ext[abs(mod2_ext$t)&gt;2 & mod2_ext$p.value &lt; 0.01 ,]\n\n14634 were significantly regulated (Lima t test, p &lt; 0.01) between the group of adult and child subjects using −2 &gt; t value &gt; 2 as a cut-off.\n\nlibrary(cnv.methyl)\nlibrary(minfi)\ndmps &lt;- cnv.methyl::DMPextr(fit = sig_mod2,                         # Toptable & stats\n                                            ContrastsDM = colnames(sig_mod2$contrasts),\n                                            beta_normalized = minfi::getBeta(adults),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(adults),\n                                            writeOut = F)\n\nWarning in .local(x, row.names, optional, ...): Arguments in '...' ignored\n\ndmps$Type &lt;- ifelse(dmps$diff_meanMeth &gt; 0,\"Hyper\",\"Hypo\")\ndmps&lt;-as.data.table(dmps, keep.rownames=T)\nsaveRDS(dmps,\"data/dmps_mod2.rds\")\ndmps_ext &lt;- cnv.methyl::DMPextr(fit = mod2_ext,                         # Toptable & stats\n                                            ContrastsDM = colnames(mod2_ext$contrasts),\n                                            beta_normalized = minfi::getBeta(adults),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(adults),\n                                            writeOut = F)\n\nWarning in .local(x, row.names, optional, ...): Arguments in '...' ignored\n\ndmps_ext$Type &lt;- ifelse(dmps_ext$diff_meanMeth &gt; 0,\"Hyper\",\"Hypo\")\ndmps_ext&lt;- as.data.table(dmps_ext[abs(dmps_ext$t)&gt;2 & dmps_ext$P.Value &lt; 0.01,],keep.rownames = T)\nsaveRDS(dmps_ext,\"data/dmps_mod2_ext.rds\")\n\nThe 2 dmp sets can be merged together into a single data.frame:\n\nlibrary(data.table)\nDMPs2 &lt;- rbind(dmps, dmps_ext)\n\nDMPs2&lt;-DMPs2[,UCSC_RefGene_Name:=sapply(UCSC_RefGene_Name,function(x) paste(unique(unlist(strsplit(x,\";\"))),collapse = \";\"))]\nNROW(DMPs2)\n\n[1] 5736\n\ntable(DMPs2$Contrast)\n\n\n       AMN-cAMN   AMN-CTL.adult  CTL.adult-cAMN Disease-Control \n           2895               5            1074            1762 \n\n\nSo there are 5736 DMPs2.\n\nplotDMP(data.table::as.data.table(DMPs2))\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\nDMPs_tab &lt;- rbind(\n  cbind(model=\"m1\",DMPs[,table(Type, Contrast)]),\n  cbind(model=\"m2\",DMPs2[,table(Type, Contrast)])\n)\n\nDMPs_tab\n\n      model AMN-cAMN AMN-CTL.adult CTL.adult-cAMN Disease-Control\nHyper \"m1\"  \"22\"     \"1\"           \"5\"            \"1078\"         \nHypo  \"m1\"  \"2088\"   \"5\"           \"584\"          \"684\"          \nHyper \"m2\"  \"23\"     \"1\"           \"5\"            \"1078\"         \nHypo  \"m2\"  \"2872\"   \"4\"           \"1069\"         \"684\"          \n\n\nBoth models are really similar and we see some differences in methylation for some of the sites. There are not many differences between AMN and the controls, maybe because the hetereogeneity of AMN group and the inbalance on the samples. In any case, the differences are very subtle even with a very permisive threshold.\n\nDMPs2[Contrast == \"AMN-CTL.adult\",list(probe=rn,chr,pos,Type,Beta_difference=round(diff_meanMeth,2),gene=UCSC_RefGene_Name,UCSC_RefGene_Group,Relation_to_Island) ]\n\n        probe   chr       pos  Type Beta_difference       gene\n1: cg15635472 chr19  47951565 Hyper            0.09     SLC8A2\n2: cg11090273  chr6 138821007  Hypo           -0.06      NHSL1\n3: cg01504215  chr8 145624713  Hypo           -0.06      CPSF1\n4: cg01534423  chr5 149281308  Hypo           -0.09      PDE6A\n5: cg03451788 chr21  40141756  Hypo           -0.06 NCRNA00114\n   UCSC_RefGene_Group Relation_to_Island\n1:               Body             Island\n2:       TSS1500;Body            OpenSea\n3:               Body            S_Shore\n4:               Body            OpenSea\n5:       Body;TSS1500            OpenSea\n\n\nAs you can observe the difference in beta values are lower than 0.1 and the positions sparse.\nNevertheless there are some sites spotted for cAMN vs controls. Furthermore, of special interest are the number of DMPs related to the contrast AMN-cAMN. Since cAMN shows greater differences with AMN than with the controls, the same way for AMN.\n\ndt &lt;- DMPs2[Contrast == \"AMN-cAMN\",list(probe=rn,chr,pos,Type,Beta_difference=round(diff_meanMeth,2),gene=UCSC_RefGene_Name,UCSC_RefGene_Group,Relation_to_Island) ]\nrange(dt[[\"Beta_difference\"]])\n\n[1] -0.19  0.17\n\nhead(dt[order(-abs(dt[[\"Beta_difference\"]]))],20)\n\n         probe   chr       pos  Type Beta_difference                gene\n 1: cg05153155 chr16  89234766  Hypo           -0.19                    \n 2: cg12560768  chr1   1196747  Hypo           -0.19 UBE2J2;LOC100128842\n 3: cg00215758 chr19  58144082  Hypo           -0.17              ZNF211\n 4: cg12878382 chr11  18287647  Hypo           -0.17                SAA1\n 5: cg17009526  chr8 118247897  Hypo           -0.17                    \n 6: cg03704899  chr2  99952717  Hypo           -0.17        EIF5B;TXNDC9\n 7: cg25403974 chr10   3167371 Hyper            0.17                PFKP\n 8: cg13917614 chr20  55325650  Hypo           -0.17                    \n 9: cg23780421  chr2 242592404  Hypo           -0.16               ATG4B\n10: cg07233587  chr5   7714112  Hypo           -0.16               ADCY2\n11: cg12062088  chr8  27336626  Hypo           -0.15              CHRNA2\n12: cg21367826  chr1 110420800  Hypo           -0.15                    \n13: cg23925455 chr12  22688743  Hypo           -0.15            KIAA0528\n14: cg08285284 chr22  26825553  Hypo           -0.15              ASPHD2\n15: cg20558091 chr17   8094311  Hypo           -0.14            C17orf59\n16: cg09496391  chr5 132391949  Hypo           -0.14               HSPA4\n17: cg03034934  chr6  56551697  Hypo           -0.14        RNU6-71P;DST\n18: cg11334070  chr1  53559001  Hypo           -0.14              SLC1A7\n19: cg11229468  chr1 144533861  Hypo           -0.14                    \n20: cg23825522 chr18  12702185  Hypo           -0.14         CEP76;PSMG2\n                                                         UCSC_RefGene_Group\n 1:                                                                        \n 2:                                                Body;Body;Body;Body;Body\n 3: TSS1500;TSS1500;TSS1500;TSS1500;TSS1500;TSS1500;TSS1500;TSS1500;TSS1500\n 4:                                                           TSS200;TSS200\n 5:                                                                        \n 6:                                                   TSS1500;5'UTR;1stExon\n 7:                                                                    Body\n 8:                                                                        \n 9:                                                               Body;Body\n10:                                                                    Body\n11:                                                           5'UTR;1stExon\n12:                                                                        \n13:                                                                    Body\n14:                                                                   5'UTR\n15:                                                                 TSS1500\n16:                                                                    Body\n17:                                                     Body;Body;Body;Body\n18:                                                                    Body\n19:                                                                        \n20:                                                            Body;TSS1500\n    Relation_to_Island\n 1:            N_Shelf\n 2:            OpenSea\n 3:            N_Shore\n 4:            OpenSea\n 5:            OpenSea\n 6:             Island\n 7:            OpenSea\n 8:            OpenSea\n 9:            OpenSea\n10:            OpenSea\n11:            OpenSea\n12:            OpenSea\n13:            OpenSea\n14:             Island\n15:            S_Shore\n16:            S_Shelf\n17:            OpenSea\n18:            S_Shore\n19:             Island\n20:             Island\n\n\nAs shown in the table above there are much higher differences between the 2 conditions than between either of them with the control. This suggest that rather than having more methylation in the same direction by favouring similar methylation processes there may be different mechanisms involved methylating different sites for AMN and cAMN.\n\n\n\n2.1.3 reference vs Adults:\n\n2.1.3.1 data inspection:\nWe have 4 models:\n\nAge corrected by fitting residuals (m1):\n\nres_mod 2 factors: control & disease\nres_mod_ext3 factors: 2 disease AMN cAMN + controls\n\nCondition + Age as covariate:\n\nmod22 factors: control & disease\nmod2_ext 3 factors: 2 disease AMN cAMN + controls\n\n\nWe have 8 reference sets, inside our probelist list object. The same 4 reference sets used previously with the controls with cgsites extracted from the paper supplementary material (tables 2S, 3S & 4S) plus the 4 datasets that come from our own controls by comparing young and old healthy subjects Section 1.6.\nIn order to assess the enrichment of each dataset for our disease in a quantitative manner, the percentage of probes in each of the sets that are significantlly methylated is calculated.\n\ncont&lt;-colnames(res_mod_ext$contrasts)\n\ntab &lt;- t(sapply(probelist,function(x) table(rownames(res_mod) %in% x)))\ntab2 &lt;- t(sapply(probelist,function(x) table(rownames(sig_res_mod) %in% x)))\ntab3 &lt;- sapply(cont,function(x){\n  x=names(res_mod_ext$t[,x])\n  sapply(probelist,function(p) length(intersect(x,p)))\n  })\ntab4 &lt;- data.table::as.data.table(sapply(cont,function(x){\n  x=names(res_mod_ext$t[,x][abs(res_mod_ext$t[,x])&gt;2])\n  sapply(probelist,function(p) length(intersect(x,p)))\n  }),keep.rownames = T)\n\ndtab&lt;-tab4[,\"Disease-Control\":=tab2[,2]]\ndtab[,\"Common_probes\":=tab[,2]]\ndtab[, total := sapply(probelist,NROW)]\ndtab[, model := \"m1\"]\n\n#### model2\ntab &lt;- t(sapply(probelist,function(x) table(rownames(mod2) %in% x)))\ntab2 &lt;- t(sapply(probelist,function(x) table(rownames(sig_mod2) %in% x)))\ntab3 &lt;- sapply(cont,function(x){\n  x=names(mod2_ext$t[,x])\n  sapply(probelist,function(p) length(intersect(x,p)))\n  })\ntab4 &lt;- data.table::as.data.table(sapply(cont,function(x){\n  x=names(mod2_ext$t[,x][abs(mod2_ext$t[,x])&gt;2])\n  sapply(probelist,function(p) length(intersect(x,p)))\n  }),keep.rownames = T)\n\ndtab2&lt;-tab4[,\"Disease-Control\":=tab2[,2]]\ndtab2[,\"Common_probes\":=tab[,2]]\ndtab2[, total := sapply(probelist,NROW)]\ndtab2[, model := \"m2\"]\n\nDtab &lt;- rbind(dtab,dtab2)\nper&lt;-Dtab[,c( Common_probes, total,\n             lapply(.SD,function(x)paste0(x,\" (\",round(x/as.numeric(Common_probes) *100,2),\"%)\"))\n),by=c(\"rn\",\"model\"),.SDcols=unique(DMPs$Contrast)]\n\nper\n\n                 rn model           Disease-Control AMN-CTL.adult      AMN-cAMN\n 1:     cgSet_Exprs    m1  638  726       5 (0.78%)    38 (5.96%)   93 (14.58%)\n 2:        cgSet_NO    m1 3956 4554      28 (0.71%)   192 (4.85%)  606 (15.32%)\n 3:          cgSetm    m1 4556 5073       32 (0.7%)   229 (5.03%)  691 (15.17%)\n 4:       cgSet_pre    m1 6878 7477      83 (1.21%)   448 (6.51%)  978 (14.22%)\n 5:  cgIn_consensus    m1 3840 3918      41 (1.07%)   260 (6.77%)  509 (13.26%)\n 6:        cgIn_top    m1 4698 5000     368 (7.83%) 1012 (21.54%) 1096 (23.33%)\n 7: cgIn_literature    m1 3025 6174      35 (1.16%)   213 (7.04%)  376 (12.43%)\n 8:         cgIn_NO    m1  837 1708       6 (0.72%)    60 (7.17%)  157 (18.76%)\n 9:     cgSet_Exprs    m2  638  726       5 (0.78%)    36 (5.64%)    97 (15.2%)\n10:        cgSet_NO    m2 3956 4554      28 (0.71%)   175 (4.42%)   542 (13.7%)\n11:          cgSetm    m2 4556 5073       32 (0.7%)   210 (4.61%)  630 (13.83%)\n12:       cgSet_pre    m2 6878 7477      83 (1.21%)   445 (6.47%)  906 (13.17%)\n13:  cgIn_consensus    m2 3840 3918      41 (1.07%)   286 (7.45%)  410 (10.68%)\n14:        cgIn_top    m2 4698 5000     368 (7.83%) 1103 (23.48%) 1111 (23.65%)\n15: cgIn_literature    m2 3025 6174      35 (1.16%)    227 (7.5%)  326 (10.78%)\n16:         cgIn_NO    m2  837 1708       6 (0.72%)    69 (8.24%)   90 (10.75%)\n    CTL.adult-cAMN\n 1:     20 (3.13%)\n 2:    123 (3.11%)\n 3:    142 (3.12%)\n 4:    279 (4.06%)\n 5:    138 (3.59%)\n 6:    639 (13.6%)\n 7:    125 (4.13%)\n 8:     15 (1.79%)\n 9:     20 (3.13%)\n10:    127 (3.21%)\n11:    145 (3.18%)\n12:     351 (5.1%)\n13:    199 (5.18%)\n14:   993 (21.14%)\n15:    172 (5.69%)\n16:     28 (3.35%)\n\n\nIn general, all the sets perform in a similar way except for the one selecting top5000 DMPs.\nThe 2 sets that seem to be more enriched for age-related methylation changes are the one based on our own controls cgIn_top and the one with no associated expression change cgIn_NO. It is not surprising to see that the set of probes based on the differences observed from our own data outperforms the sets coming from other sources.\nIn respect with the set with no-expression, in the paper they hypothesize that methylation changes uncorrelated with changes in expression may be caused by aging.\n\n\n\n2.1.4 Discarded:\nIn order to see if the aging factor has a major effect in the DMPs between control and disased we can check if the groups are enriched in DMPs for the sites in the reference age-related probes. So if the proportion of DMPs in age-related areas is higher than the overall average proportion of DMPs, this suggests that the set is enriched.\n\n2.1.4.0.1 A. Overall ammount of methylation in each contrast vs proportion of methylation for the probes in age signature sets\nTo find the proportion of significantlly methylated probes for each of the contrasts the number of sig. methylated cgs of each contrast are divided by the total number of probes.\n\ndt &lt;- data.table::as.data.table(t(sapply(cont,function(x){\n  x=names(res_mod_ext$t[,x][abs(res_mod_ext$t[,x])&gt;2])\n   round(length(intersect(x,rownames(res_mod_ext)))/NROW(res_mod_ext) *100,2)\n  })),keep.rownames = T)\ndt[,\"Disease-Control\":=round(length(intersect(rownames(sig_res_mod),rownames(res_mod)))/NROW(res_mod) *100,2)]\ndt2 &lt;- data.table::as.data.table(t(sapply(cont,function(x){\n  x=names(mod2_ext$t[,x][abs(mod2_ext$t[,x])&gt;2])\n   round(length(intersect(x,rownames(mod2_ext)))/NROW(mod2_ext) *100,2)\n  })),keep.rownames = T)\ndt2[,\"Disease-Control\":=round(length(intersect(rownames(sig_mod2),rownames(res_mod)))/NROW(mod2) *100,2)]\n\nInterestingly enough, although the proportion of DMPs is evenly distributed for each of the age signatures, as stated before, we find that cAMN-CTL.adult has almost the double of DMPs while it presents the half of overlapping probes with the age signature datasets.\n\n\n2.1.4.0.2 B. Perform a randomization:\nde las significant propbes coger un subsample random del mismo tamaño que el probset de aging\n\nsim &lt;- data.table::as.data.table(sapply(cont,function(x){\n  sigprobes=names(res_mod_ext$t[,x][abs(res_mod_ext$t[,x])&gt;2])\n  # N_sigprobes = length(sigprobes)\n  sapply(probelist,function(pl) {\n    simset &lt;- sample(sigprobes, length(pl),replace = F)\n    length(intersect(pl,simset))\n    })\n  \n  }),keep.rownames = T)\n\n\n# sample(rownames(res_mod),size = )\n\n\n\n2.1.4.1 Betas:\n\n# Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\ndesign_FULL &lt;- t(full_mod$design)\n# For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\nbetas_c_FULL &lt;-apply(design_FULL , 1 , function(x) apply(betas[] %*% diag(x),1 , function(y) mean(y[y!=0])))\n\nbetas &lt;- minfi::getBeta(adults)\nmodels&lt;-list(res_mod=res_mod,\n             res_mod_ext=res_mod_ext,\n             mod2=mod2,\n             mod2_ext=mod2_ext)\n\nbetas_c &lt;- lapply(names(models),function(model_name){\n  # Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\n  fit&lt;-models[[model_name]]\n  design &lt;- t(fit$design)\n\n  dt_c&lt;-rbindlist(lapply(names(probelist), function(n){\n    idx&lt;-intersect(probelist[[n]],rownames(fit))\n    cgs&lt;-intersect(idx,rownames(betas))\n    b &lt;- betas[cgs,]\n    # For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\n    dt=as.data.table(apply(design , 1 , function(x) apply(b %*% diag(x),1 , function(y) mean(y[y!=0]))))\n    dt$ref=n\n    dt$cg&lt;-cgs\n    dt$model=model_name\n    dt\n    b&lt;-melt(dt,id.vars = c(\"ref\",\"cg\",\"model\"),variable.name = \"Condition\",value.name = \"bVal\")-&gt;b\n    b\n    }\n  ))\n  dt_c\n})\nnames(betas_c)&lt;- names(models)\npdata&lt;-rbindlist(betas_c)\npdata&lt;-pdata[!is.na(bVal),]\npdata[startsWith( model,\"res_mod\"),model:=\"residuals\"]\npdata[startsWith( model,\"mod2\"),model:=\"covariate\"]\n\nWe are ready to test mean differences and plot:\n\n\n2.1.4.2 Plots:\n\nlibrary(ggplot2)\nlibrary(viridis)\n\n  p1&lt;-ggplot(pdata, aes(x=Condition, y=bVal, fill= bVal)) +\n     geom_boxplot(aes(fill=Condition),outlier.fill=\"ivory\",alpha = 0.5) +\n  \n      theme(\n        legend.position=\"left\",\n        plot.title = element_text(size=11)\n      ) +\n      ggtitle(\"Beta values \") +\n      xlab(\"Cells\")+\n    ylab(\"relative fraction\")+\n            scale_x_discrete(guide = guide_axis(angle = 60))+\n\n    facet_wrap(as.formula(paste(\"~ ref + model\" )),ncol = 4)\n\np1\n\n\n\n\nIt seems from the visual inspection of the plots that there is more methylation for cAMN group than for the rest of the conditions, but are the methylation differences for that category really significant?\nLets test:\n\n\n2.1.4.3 Significance test:\n\nzt&lt;-list()\npdata[,sd:=stats::sd(bVal),by=c(\"model\",\"Condition\")]\nsd_tab&lt;-pdata[,unique(sd),by=Condition]\npdata_w&lt;-dcast(pdata,cg+model+ref~Condition,value.var = c(\"bVal\"))\nz_bimodal_Disease &lt;- pdata_w[,c(\n  N=.N,\n  BSDA::z.test(\n    TypeControl,\n    TypeDisease,\n    sigma.x=sd_tab[Condition==\"TypeControl\",V1],\n    sigma.y=sd_tab[Condition==\"TypeDisease\",V1]\n    )\n  ),by=c(\"ref\",\"model\")]\nz_bimodal_Disease[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_Disease[,condition:=\"Disease\"]\nzt[[\"Disease\"]] &lt;- dcast(z_bimodal_Disease, ref + model + condition+ N + p.value ~ group, value.var = c(\"estimate\"))\n\n\n\nz_bimodal_AMN &lt;- pdata_w[,c(\n  N=.N,\n  BSDA::z.test(\n    ConditionCTL.adult,\n    ConditionAMN,\n    sigma.y=sd_tab[Condition==\"ConditionCTL.adult\",V1],\n    sigma.x=sd_tab[Condition==\"ConditionAMN\",V1]\n    )\n  ),by=c(\"ref\",\"model\")]\n\nz_bimodal_AMN[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_AMN[,condition:=\"AMN\"]\nzt[[\"AMN\"]] &lt;- dcast(z_bimodal_AMN, ref + model + condition+ N + p.value ~ group, value.var = c(\"estimate\"))\n\nz_bimodal_cAMN &lt;- pdata_w[,c(\n  N=.N,\n  BSDA::z.test(\n    ConditionCTL.adult,\n    ConditioncAMN,\n    sigma.x=sd_tab[Condition==\"ConditionCTL.adult\",V1],\n    sigma.y=sd_tab[Condition==\"ConditioncAMN\",V1]\n        )\n  ),by=c(\"ref\",\"model\")]\nz_bimodal_cAMN[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_cAMN[,condition:=\"cAMN\"]\nzt[[\"cAMN\"]] &lt;- dcast(z_bimodal_cAMN, ref + model + condition+  N + p.value ~ group, value.var = c(\"estimate\"))\n\nztab&lt;-rbindlist(zt)\n# t_bimodal &lt;- pdata[,t.test(child,adult),by=c(\"ref\",\"model\",\"type\")]\n\nztab[,diff:=Case-Ctl]\ndata.table::setorder(ztab,p.value,diff)\nkableExtra::kbl(ztab)|&gt;kableExtra::kable_classic_2()\n\n\n\nTable 2.1: Adult Disease vs Adult Controls methylation distributions significance test.\n\n\nref\nmodel\ncondition\nN\np.value\nCase\nCtl\ndiff\n\n\n\n\ncgIn_top\ncovariate\ncAMN\n4694\n0.00\n0.49\n0.45\n0.04\n\n\ncgIn_top\nresiduals\ncAMN\n4694\n0.00\n0.49\n0.45\n0.04\n\n\ncgSet_pre\ncovariate\ncAMN\n6866\n0.00\n0.43\n0.40\n0.02\n\n\ncgSet_pre\nresiduals\ncAMN\n6866\n0.00\n0.43\n0.40\n0.02\n\n\ncgIn_literature\ncovariate\ncAMN\n3020\n0.00\n0.48\n0.45\n0.03\n\n\ncgIn_literature\nresiduals\ncAMN\n3020\n0.00\n0.48\n0.45\n0.03\n\n\ncgIn_consensus\ncovariate\ncAMN\n3835\n0.00\n0.43\n0.41\n0.02\n\n\ncgIn_consensus\nresiduals\ncAMN\n3835\n0.00\n0.43\n0.41\n0.02\n\n\ncgSetm\ncovariate\ncAMN\n4544\n0.00\n0.31\n0.30\n0.02\n\n\ncgSetm\nresiduals\ncAMN\n4544\n0.00\n0.31\n0.30\n0.02\n\n\ncgSet_NO\ncovariate\ncAMN\n3946\n0.00\n0.31\n0.30\n0.02\n\n\ncgSet_NO\nresiduals\ncAMN\n3946\n0.00\n0.31\n0.30\n0.02\n\n\ncgSetm\ncovariate\nAMN\n4544\n0.03\n0.29\n0.30\n-0.01\n\n\ncgSetm\nresiduals\nAMN\n4544\n0.03\n0.29\n0.30\n-0.01\n\n\ncgSet_NO\ncovariate\nAMN\n3946\n0.04\n0.29\n0.30\n-0.01\n\n\ncgSet_NO\nresiduals\nAMN\n3946\n0.04\n0.29\n0.30\n-0.01\n\n\ncgSet_Exprs\ncovariate\ncAMN\n636\n0.09\n0.33\n0.31\n0.02\n\n\ncgSet_Exprs\nresiduals\ncAMN\n636\n0.09\n0.33\n0.31\n0.02\n\n\ncgSetm\ncovariate\nDisease\n4544\n0.17\n0.29\n0.30\n-0.01\n\n\ncgSetm\nresiduals\nDisease\n4544\n0.17\n0.29\n0.30\n-0.01\n\n\ncgIn_NO\ncovariate\nAMN\n837\n0.18\n0.27\n0.28\n-0.01\n\n\ncgIn_NO\nresiduals\nAMN\n837\n0.18\n0.27\n0.28\n-0.01\n\n\ncgSet_NO\ncovariate\nDisease\n3946\n0.19\n0.29\n0.30\n-0.01\n\n\ncgSet_NO\nresiduals\nDisease\n3946\n0.19\n0.29\n0.30\n-0.01\n\n\ncgIn_literature\ncovariate\nDisease\n3020\n0.23\n0.45\n0.45\n0.01\n\n\ncgIn_literature\nresiduals\nDisease\n3020\n0.23\n0.45\n0.45\n0.01\n\n\ncgIn_NO\ncovariate\nDisease\n837\n0.25\n0.27\n0.28\n-0.01\n\n\ncgIn_NO\nresiduals\nDisease\n837\n0.25\n0.27\n0.28\n-0.01\n\n\ncgSet_Exprs\ncovariate\nAMN\n636\n0.44\n0.30\n0.31\n-0.01\n\n\ncgSet_Exprs\nresiduals\nAMN\n636\n0.44\n0.30\n0.31\n-0.01\n\n\ncgIn_top\ncovariate\nDisease\n4694\n0.49\n0.46\n0.45\n0.00\n\n\ncgIn_top\nresiduals\nDisease\n4694\n0.49\n0.46\n0.45\n0.00\n\n\ncgSet_pre\ncovariate\nDisease\n6866\n0.52\n0.41\n0.40\n0.00\n\n\ncgSet_pre\nresiduals\nDisease\n6866\n0.52\n0.41\n0.40\n0.00\n\n\ncgIn_top\ncovariate\nAMN\n4694\n0.55\n0.45\n0.45\n0.00\n\n\ncgIn_top\nresiduals\nAMN\n4694\n0.55\n0.45\n0.45\n0.00\n\n\ncgIn_literature\ncovariate\nAMN\n3020\n0.57\n0.45\n0.45\n0.00\n\n\ncgIn_literature\nresiduals\nAMN\n3020\n0.57\n0.45\n0.45\n0.00\n\n\ncgIn_consensus\ncovariate\nDisease\n3835\n0.59\n0.41\n0.41\n0.00\n\n\ncgIn_consensus\nresiduals\nDisease\n3835\n0.59\n0.41\n0.41\n0.00\n\n\ncgSet_Exprs\ncovariate\nDisease\n636\n0.66\n0.31\n0.31\n-0.01\n\n\ncgSet_Exprs\nresiduals\nDisease\n636\n0.66\n0.31\n0.31\n-0.01\n\n\ncgSet_pre\ncovariate\nAMN\n6866\n0.77\n0.40\n0.40\n0.00\n\n\ncgSet_pre\nresiduals\nAMN\n6866\n0.77\n0.40\n0.40\n0.00\n\n\ncgIn_NO\ncovariate\ncAMN\n837\n0.86\n0.29\n0.28\n0.00\n\n\ncgIn_NO\nresiduals\ncAMN\n837\n0.86\n0.29\n0.28\n0.00\n\n\ncgIn_consensus\ncovariate\nAMN\n3835\n0.90\n0.41\n0.41\n0.00\n\n\ncgIn_consensus\nresiduals\nAMN\n3835\n0.90\n0.41\n0.41\n0.00\n\n\n\n\n\n\n\n# kableExtra::kbl(z_bimodal[,.SD,.SDcols=c(\"ref\",\"model\",\"type\",\"estimate\",\"conf.int\",\"p.value\")],digits=2) |&gt; kableExtra::kable_classic()\n\nWe see there is a small difference in methylation for the dataset built with our controls and also for the dataset from literature. For more information about the pathways associated with the set of methylated genes for each reference set take a look at Section 1.6 set"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "XALD Project: Study of methylation changes in Age-related cg sites associated with XALD disease",
    "section": "",
    "text": "XALD Project: Study of methylation changes in Age-related cg sites associated with XALD disease\nThis book is created to give answer to the following questions:\n\nIs there an age-accelerating factor for XALD patients according to the changes in methylation?\nWhich is the methylation mark associated with XALD disease?\n\n\n\n\n\n\nImage by Kip Lyall.\n\n\n\nView Large Image \n\n\nFigure Viewer\n\n\nDownload Hi-res image \n\n\nDownload (PPT)"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "Summary\nIn summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Preface",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  }
]